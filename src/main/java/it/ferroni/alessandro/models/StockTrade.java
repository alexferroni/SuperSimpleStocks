/**
 * 
 */
package it.ferroni.alessandro.models;

import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import it.ferroni.alessandro.constants.StockSymbols;
import it.ferroni.alessandro.constants.TradeType;

/**
 * @author Alessandro
 * 
 * This bean should be an entity bean (annotated with javax.persistence annotations).
 * Primary key should be an autogenerated id or a complex key with other fields that can identify a unique trade.
 * Another fields should be useful to decorate the trade (username or company, etc)
 *
 */
public class StockTrade implements Serializable {
	private static final long serialVersionUID = -8820804710926071897L;
	
	private StockSymbols stockSymbol;
	private LocalDateTime timestamp;
	private Long quantity;
	private BigDecimal price;
	private TradeType type;
	
	public StockTrade() {
	}
	
	public StockTrade(StockSymbols stockSymbol, LocalDateTime timestamp, Long quantity, BigDecimal price, TradeType type) {
		this.stockSymbol = stockSymbol;
		this.timestamp = timestamp;
		this.quantity = quantity;
		this.price = price;
		this.type = type;
	}

	public StockSymbols getStockSymbol() {
		return stockSymbol;
	}

	public void setStockSymbol(StockSymbols stockSymbol) {
		this.stockSymbol = stockSymbol;
	}

	public LocalDateTime getTimestamp() {
		return timestamp;
	}

	public void setTimestamp(LocalDateTime timestamp) {
		this.timestamp = timestamp;
	}

	public Long getQuantity() {
		return quantity;
	}

	public void setQuantity(Long quantity) {
		this.quantity = quantity;
	}

	public BigDecimal getPrice() {
		return price;
	}

	public void setPrice(BigDecimal price) {
		this.price = price;
	}

	public TradeType getType() {
		return type;
	}

	public void setType(TradeType type) {
		this.type = type;
	}

	@Override
	public String toString() {
		return "StockTrade [stockSymbol=" + stockSymbol + ", timestamp=" + timestamp + ", quantity=" + quantity
				+ ", price=" + price + ", type=" + type + "]";
	}
	
	
	
}
